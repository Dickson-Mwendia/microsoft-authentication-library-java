### YamlMime:JavaType
uid: "com.microsoft.aad.msal4j.IBroker"
fullName: "com.microsoft.aad.msal4j.IBroker"
name: "IBroker"
nameWithType: "IBroker"
summary: "Used to define the basic set of methods that all Brokers must implement All methods are so they can be referenced by MSAL Java without an implementation, and by default simply throw an exception saying that a broker implementation is missing"
syntax: "public interface **IBroker**"
methods:
- uid: "com.microsoft.aad.msal4j.IBroker.acquireToken(com.microsoft.aad.msal4j.PublicClientApplication,com.microsoft.aad.msal4j.InteractiveRequestParameters)"
  fullName: "com.microsoft.aad.msal4j.IBroker.acquireToken(PublicClientApplication application, InteractiveRequestParameters requestParameters)"
  name: "acquireToken(PublicClientApplication application, InteractiveRequestParameters requestParameters)"
  nameWithType: "IBroker.acquireToken(PublicClientApplication application, InteractiveRequestParameters requestParameters)"
  summary: "Acquire a token interactively, by prompting users to enter their credentials in some way"
  modifiers:
  - "default"
  parameters:
  - name: "application"
    type: "<xref href=\"com.microsoft.aad.msal4j.PublicClientApplication?alt=com.microsoft.aad.msal4j.PublicClientApplication&text=PublicClientApplication\" data-throw-if-not-resolved=\"False\" />"
  - description: "MsalRequest object which contains everything needed for the broker implementation to make a request"
    name: "requestParameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.InteractiveRequestParameters?alt=com.microsoft.aad.msal4j.InteractiveRequestParameters&text=InteractiveRequestParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default IAuthenticationResult acquireToken(PublicClientApplication application, InteractiveRequestParameters requestParameters)"
  desc: "Acquire a token interactively, by prompting users to enter their credentials in some way"
  returns:
    description: "IBroker implementations will return an AuthenticationResult object"
    type: "<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.IBroker.acquireToken(com.microsoft.aad.msal4j.PublicClientApplication,com.microsoft.aad.msal4j.SilentParameters)"
  fullName: "com.microsoft.aad.msal4j.IBroker.acquireToken(PublicClientApplication application, SilentParameters requestParameters)"
  name: "acquireToken(PublicClientApplication application, SilentParameters requestParameters)"
  nameWithType: "IBroker.acquireToken(PublicClientApplication application, SilentParameters requestParameters)"
  summary: "Acquire a token silently, i.<wbr>e."
  modifiers:
  - "default"
  parameters:
  - name: "application"
    type: "<xref href=\"com.microsoft.aad.msal4j.PublicClientApplication?alt=com.microsoft.aad.msal4j.PublicClientApplication&text=PublicClientApplication\" data-throw-if-not-resolved=\"False\" />"
  - description: "MsalRequest object which contains everything needed for the broker implementation to make a request"
    name: "requestParameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.SilentParameters?alt=com.microsoft.aad.msal4j.SilentParameters&text=SilentParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default IAuthenticationResult acquireToken(PublicClientApplication application, SilentParameters requestParameters)"
  desc: "Acquire a token silently, i.e. without direct user interaction This may be accomplished by returning tokens from a token cache, using cached refresh tokens to get new tokens, or via any authentication flow where a user is not prompted to enter credentials"
  returns:
    description: "IBroker implementations will return an AuthenticationResult object"
    type: "<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.IBroker.acquireToken(com.microsoft.aad.msal4j.PublicClientApplication,com.microsoft.aad.msal4j.UserNamePasswordParameters)"
  fullName: "com.microsoft.aad.msal4j.IBroker.acquireToken(PublicClientApplication application, UserNamePasswordParameters requestParameters)"
  name: "acquireToken(PublicClientApplication application, UserNamePasswordParameters requestParameters)"
  nameWithType: "IBroker.acquireToken(PublicClientApplication application, UserNamePasswordParameters requestParameters)"
  summary: "Acquire a token silently, i.<wbr>e."
  modifiers:
  - "default"
  parameters:
  - name: "application"
    type: "<xref href=\"com.microsoft.aad.msal4j.PublicClientApplication?alt=com.microsoft.aad.msal4j.PublicClientApplication&text=PublicClientApplication\" data-throw-if-not-resolved=\"False\" />"
  - description: "MsalRequest object which contains everything needed for the broker implementation to make a request"
    name: "requestParameters"
    type: "<xref href=\"com.microsoft.aad.msal4j.UserNamePasswordParameters?alt=com.microsoft.aad.msal4j.UserNamePasswordParameters&text=UserNamePasswordParameters\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default IAuthenticationResult acquireToken(PublicClientApplication application, UserNamePasswordParameters requestParameters)"
  desc: "Acquire a token silently, i.e. without direct user interaction, using username/password authentication"
  returns:
    description: "IBroker implementations will return an AuthenticationResult object"
    type: "<xref href=\"com.microsoft.aad.msal4j.IAuthenticationResult?alt=com.microsoft.aad.msal4j.IAuthenticationResult&text=IAuthenticationResult\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.IBroker.isAvailable()"
  fullName: "com.microsoft.aad.msal4j.IBroker.isAvailable()"
  name: "isAvailable()"
  nameWithType: "IBroker.isAvailable()"
  summary: "checks if a IBroker implementation exists"
  modifiers:
  - "default"
  syntax: "public default boolean isAvailable()"
  desc: "checks if a IBroker implementation exists"
  returns:
    type: "<xref href=\"boolean?alt=boolean&text=boolean\" data-throw-if-not-resolved=\"False\" />"
- uid: "com.microsoft.aad.msal4j.IBroker.removeAccount(com.microsoft.aad.msal4j.IAccount)"
  fullName: "com.microsoft.aad.msal4j.IBroker.removeAccount(IAccount account)"
  name: "removeAccount(IAccount account)"
  nameWithType: "IBroker.removeAccount(IAccount account)"
  modifiers:
  - "default"
  parameters:
  - name: "account"
    type: "<xref href=\"com.microsoft.aad.msal4j.IAccount?alt=com.microsoft.aad.msal4j.IAccount&text=IAccount\" data-throw-if-not-resolved=\"False\" />"
  syntax: "public default CompletableFuture removeAccount(IAccount account)"
  returns:
    type: "<xref href=\"java.util.concurrent.CompletableFuture?alt=java.util.concurrent.CompletableFuture&text=CompletableFuture\" data-throw-if-not-resolved=\"False\" />"
type: "interface"
desc: "Used to define the basic set of methods that all Brokers must implement All methods are so they can be referenced by MSAL Java without an implementation, and by default simply throw an exception saying that a broker implementation is missing"
metadata: {}
package: "com.microsoft.aad.msal4j"
artifact: com.microsoft.azure:msal4j:1.13.8
